/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vitalityvault;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;

/**
 *
 * @author conor
 */
public class VVHGUI extends javax.swing.JFrame {
    
    private ArrayList<VVH> info;
    Connection myConn;
    private VVCalTrackerGUI calTrackerGUI;
    
    
    /**
     * Creates new form VVHGUI
     */
    public VVHGUI() {
        initComponents();
        info = new ArrayList<>();
        getConnection();
        calTrackerGUI = new VVCalTrackerGUI();
    }

    public void setCalTrackerGUI(VVCalTrackerGUI calTrackerGUI) {
        this.calTrackerGUI = calTrackerGUI;
    }

    private void getConnection() {
        try {
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/foods", "dean_dolan", "temppassword");
        } catch (SQLException e) {
            System.out.println("Error connecting" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        textArea1 = new java.awt.TextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ageTF = new javax.swing.JTextField();
        genderCB = new javax.swing.JComboBox<>();
        heightTF = new javax.swing.JTextField();
        cwTF = new javax.swing.JTextField();
        gwTF = new javax.swing.JTextField();
        goalsTF = new javax.swing.JTextField();
        activityTF = new javax.swing.JTextField();
        tfTF = new javax.swing.JTextField();
        CmtTF = new javax.swing.JTextField();
        ageLBL = new javax.swing.JLabel();
        genderLBL = new javax.swing.JLabel();
        heightLBL = new javax.swing.JLabel();
        cwLBL = new javax.swing.JLabel();
        gwLBL = new javax.swing.JLabel();
        goalsLBL = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mtnTA1 = new javax.swing.JTextArea();
        tfLBL = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        edTBTN = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mtnTA = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        cttTA = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        gngTA = new javax.swing.JTextArea();
        maintainRb = new javax.swing.JRadioButton();
        cuttingRb = new javax.swing.JRadioButton();
        gainingRb = new javax.swing.JRadioButton();
        resultsBTN = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        genderCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        goalsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goalsTFActionPerformed(evt);
            }
        });

        activityTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityTFActionPerformed(evt);
            }
        });

        tfTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTFActionPerformed(evt);
            }
        });

        CmtTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmtTFActionPerformed(evt);
            }
        });

        ageLBL.setText("Age:");

        genderLBL.setText("Gender: (1 = Male, 2= Female)");

        heightLBL.setText("Height (cm):");

        cwLBL.setText("Current Weight (kg):");

        gwLBL.setText("Goal Weight (kg):");

        goalsLBL.setText("Body Goals (Toned, Lean, Jacked)");

        jLabel1.setText("Activity:");

        mtnTA1.setColumns(20);
        mtnTA1.setRows(5);
        mtnTA1.setText("Sedentary (little to no exercise): Activity Factor = 1.2\nLightly active (light exercise/sports 1-3 days/week): Activity Factor = 1.375\nModerately active (moderate exercise/sports 3-5 days/week): Activity Factor = 1.55\nVery active (hard exercise/sports 6-7 days a week): Activity Factor = 1.725\nExtra active (very hard exercise/sports & physical job or training twice a day): Activity Factor = 1.9");
        jScrollPane2.setViewportView(mtnTA1);

        tfLBL.setText("Timeframe");

        jLabel3.setText("Comments");

        edTBTN.setText("ED Prevention");
        edTBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edTBTNActionPerformed(evt);
            }
        });

        mtnTA.setColumns(20);
        mtnTA.setRows(5);
        mtnTA.setText("Maintain Calories & macros:\n");
        jScrollPane1.setViewportView(mtnTA);

        cttTA.setColumns(20);
        cttTA.setRows(5);
        cttTA.setText("Cutting Calories & macros:\n");
        jScrollPane3.setViewportView(cttTA);

        gngTA.setColumns(20);
        gngTA.setRows(5);
        gngTA.setText("Gaining Calories & macros:\n");
        jScrollPane4.setViewportView(gngTA);

        buttonGroup1.add(maintainRb);
        maintainRb.setText("Select Maintain");
        maintainRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maintainRbActionPerformed(evt);
            }
        });

        buttonGroup1.add(cuttingRb);
        cuttingRb.setText("Select Cutting");
        cuttingRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuttingRbActionPerformed(evt);
            }
        });

        buttonGroup1.add(gainingRb);
        gainingRb.setText("Select Gaining");
        gainingRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainingRbActionPerformed(evt);
            }
        });

        resultsBTN.setText("Get Results");
        resultsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsBTNActionPerformed(evt);
            }
        });

        nextBtn.setText("Next ->");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ageLBL)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cwTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(genderLBL)
                                .addComponent(heightLBL)
                                .addComponent(cwLBL)
                                .addComponent(gwLBL))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(gwTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(heightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(genderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(goalsLBL)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLBL)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CmtTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(activityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goalsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(edTBTN))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(maintainRb)
                        .addGap(77, 77, 77))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(cuttingRb)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(gainingRb)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)))
                                .addGap(10, 10, 10))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(resultsBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nextBtn)
                                .addGap(32, 32, 32))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageLBL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLBL)
                            .addComponent(genderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heightLBL)
                            .addComponent(heightTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cwTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cwLBL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gwTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gwLBL)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(maintainRb))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(cuttingRb)
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(gainingRb)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(resultsBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nextBtn))
                                .addContainerGap())))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(goalsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goalsLBL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(activityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLBL))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(CmtTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(edTBTN)
                        .addGap(50, 50, 50))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void activityTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activityTFActionPerformed

    private void tfTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTFActionPerformed

    private void edTBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edTBTNActionPerformed
        // TODO add your handling code here:
        //functionaliy do this button will be developed with more time a funding
    }//GEN-LAST:event_edTBTNActionPerformed

    private void resultsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsBTNActionPerformed
        // TODO add your handling code here:

        //To add data to the array and eventually to the database
        VVH v = new VVH();
        v.setAge(Integer.parseInt(ageTF.getText()));//age will delcare intenisty of workout for diff sect
        v.setcWeight(Integer.parseInt(cwTF.getText())); // paired with goal weight and time frame will determine user calories and workout plan
        v.setgWeight(Integer.parseInt(gwTF.getText())); // paired with current weight and time frame will determine user calories and workout plan
        v.setHeight(Integer.parseInt(heightTF.getText()));
        v.setGoals(goalsTF.getText());
        v.setTimeframe(Integer.parseInt(tfTF.getText()));
        v.setGender(genderCB.getSelectedItem().toString());
        v.setActivity(/*this (int) was made by the lightbulb*/(int) Double.parseDouble(activityTF.getText()));
        v.setComments(CmtTF.getText());
        //maybe add the calories to the database 
        info.add(v);
        //To establish connection between the database and application
        try {
            Statement myStatement = myConn.createStatement();
            myStatement.executeUpdate("INSERT INTO users(age,gender,currentWeight,goalWeight,height,bodyGoals,activity,timeframe,comments)" + "VALUES('" + ageTF.getText() + "','" + genderCB.getSelectedItem().toString() + "','" + cwTF.getText() + "','" + gwTF.getText() + "','" + heightTF.getText() + "','" + goalsTF.getText() + "','" + activityTF.getText() + "','" + tfTF.getText() + "','" + CmtTF.getText() + "')");
        } catch (SQLException e) {
            System.out.println("Error " + e);
        }
        //this is used to compute the maintainence
        String str = (genderCB.getSelectedItem().toString());
        int x = Integer.parseInt(str);
        if (x == 1) { // to calculate males
            // Extracting values from text fields and converting them to numeric types
            int weight = Integer.parseInt(cwTF.getText());
            int height = Integer.parseInt(heightTF.getText());
            int age = Integer.parseInt(ageTF.getText());
            double activity = Double.parseDouble(activityTF.getText());

            // Calculating mKcal using the extracted values
            double mKcal = (weight * 10) + (height * 6) + (age * 5) + (activity) + 5;
            double mProtein = mKcal * 0.4 / 4;
            double mCarbs = mKcal * 0.3 / 3;
            double mFats = mKcal * 0.3 / 9;
            double cKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 - 300;
            double cProtein = cKcal * 0.5 / 4;
            double cCarbs = cKcal * 0.3 / 3;
            double cFats = cKcal * 0.2 / 9;
            double gKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 + 300;
            double gProtein = gKcal * 0.3 / 4;
            double gCarbs = gKcal * 0.4 / 3;
            double gFats = gKcal * 0.3 / 9;
            //System.out.println(Math.round(mKcal));
            mtnTA.append("Your maintainence Calories are " + (Math.round(mKcal)) + "\n" + "Protein " + (Math.round(mProtein)) + "\n" + "Carbs " + (Math.round(mCarbs)) + "\n" + "Fats " + (Math.round(mFats)));
            cttTA.append("Your cutting calories are " + (Math.round(cKcal)) + "\n" + "Protein " + (Math.round(cProtein)) + "\n" + "Carbs " + (Math.round(cCarbs)) + "\n" + "Fats " + (Math.round(cFats)));
            gngTA.append("Your gaining calories are " + (Math.round(gKcal)) + "\n" + "Protein " + (Math.round(gProtein)) + "\n" + "Carbs " + (Math.round(gCarbs)) + "\n" + "Fats " + (Math.round(gFats)));
        } else { //to calculate for female
            int weight = Integer.parseInt(cwTF.getText());
            int height = Integer.parseInt(heightTF.getText());
            int age = Integer.parseInt(ageTF.getText());
            double activity = Double.parseDouble(activityTF.getText());

            // adjust formula for women!!!!!!!!!!!
            double mKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) - 161;
            double mProtein = mKcal * 0.4 / 4;
            double mCarbs = mKcal * 0.3 / 3;
            double mFats = mKcal * 0.3 / 9;
            double cKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 - 300;
            double cProtein = cKcal * 0.5 / 4;
            double cCarbs = cKcal * 0.3 / 3;
            double cFats = cKcal * 0.2 / 9;
            double gKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 + 300;
            double gProtein = gKcal * 0.3 / 4;
            double gCarbs = gKcal * 0.4 / 3;
            double gFats = gKcal * 0.3 / 9;
            mtnTA.append("Your maintainence Calories are " + mKcal + "\n" + "Protein " + mProtein + "\n" + "Carbs " + mCarbs + "\n" + "Fats " + mFats);
            cttTA.append("Your cutting calories are " + cKcal + "\n" + "Protein " + cProtein + "\n" + "Carbs " + cCarbs + "\n" + "Fats " + cFats);
            gngTA.append("Your gaining calories are " + gKcal + "\n" + "Protein " + gProtein + "\n" + "Carbs " + gCarbs + "\n" + "Fats " + gFats);

        }/* this was apart of the validation that didnt work
        if (!InputValidator.validateAge(ageTF.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid age.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!InputValidator.validateGender(genderCB.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Please select a valid gender.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!InputValidator.validateWeight(cwTF.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid current weight.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!InputValidator.validateWeight(gwTF.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid goal weight.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!InputValidator.validateHeight(heightTF.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid height.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!InputValidator.validateActivity(activityTF.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid activity level.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
         */

    }//GEN-LAST:event_resultsBTNActionPerformed

    private void CmtTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmtTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CmtTFActionPerformed

    private void goalsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goalsTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goalsTFActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        VVCalTrackerGUI closeGUI = new VVCalTrackerGUI();
        closeGUI.setVisible(false);
        vvworkout myGUI = new vvworkout();
        myGUI.setVisible(true);
    }//GEN-LAST:event_nextBtnActionPerformed
/*
    private void calculateCaloriesAndMacros() {
        VVH v = new VVH();
        v.setAge(Integer.parseInt(ageTF.getText()));//age will delcare intenisty of workout for diff sect
        v.setcWeight(Integer.parseInt(cwTF.getText())); // paired with goal weight and time frame will determine user calories and workout plan
        v.setgWeight(Integer.parseInt(gwTF.getText())); // paired with current weight and time frame will determine user calories and workout plan
        v.setHeight(Integer.parseInt(heightTF.getText()));
        v.setGoals(goalsTF.getText());
        v.setTimeframe(Integer.parseInt(tfTF.getText()));
        v.setGender(genderCB.getSelectedItem().toString());
        v.setActivity(/*this (int) was made by the lightbulb(int) Double.parseDouble(activityTF.getText()));
        v.setComments(CmtTF.getText());
        //maybe add the calories to the database 
        info.add(v);
        //To establish connection between the database and application
        try {
            Statement myStatement = myConn.createStatement();
            myStatement.executeUpdate("INSERT INTO users(age,gender,currentWeight,goalWeight,height,bodyGoals,activity,timeframe,comments)" + "VALUES('" + ageTF.getText() + "','" + genderCB.getSelectedItem().toString() + "','" + cwTF.getText() + "','" + gwTF.getText() + "','" + heightTF.getText() + "','" + goalsTF.getText() + "','" + activityTF.getText() + "','" + tfTF.getText() + "','" + CmtTF.getText() + "')");
        } catch (SQLException e) {
            System.out.println("Error " + e);
        }
        //this is used to compute the maintainence
        String str = (genderCB.getSelectedItem().toString());
        int x = Integer.parseInt(str);
        if (x == 1) { // to calculate males
            // Extracting values from text fields and converting them to numeric types
            int weight = Integer.parseInt(cwTF.getText());
            int height = Integer.parseInt(heightTF.getText());
            int age = Integer.parseInt(ageTF.getText());
            double activity = Double.parseDouble(activityTF.getText());

            // Calculating mKcal using the extracted values
            double mKcal = (weight * 10) + (height * 6) + (age * 5) + (activity) + 5;
            double mProtein = mKcal * 0.4 / 4;
            double mCarbs = mKcal * 0.3 / 3;
            double mFats = mKcal * 0.3 / 9;
            double cKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 - 300;
            double cProtein = cKcal * 0.5 / 4;
            double cCarbs = cKcal * 0.3 / 3;
            double cFats = cKcal * 0.2 / 9;
            double gKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 + 300;
            double gProtein = gKcal * 0.3 / 4;
            double gCarbs = gKcal * 0.4 / 3;
            double gFats = gKcal * 0.3 / 9;
            //System.out.println(Math.round(mKcal));
            mtnTA.append("Your maintainence Calories are " + (Math.round(mKcal)) + "\n" + "Protein " + (Math.round(mProtein)) + "\n" + "Carbs " + (Math.round(mCarbs)) + "\n" + "Fats " + (Math.round(mFats)));
            cttTA.append("Your cutting calories are " + (Math.round(cKcal)) + "\n" + "Protein " + (Math.round(cProtein)) + "\n" + "Carbs " + (Math.round(cCarbs)) + "\n" + "Fats " + (Math.round(cFats)));
            gngTA.append("Your gaining calories are " + (Math.round(gKcal)) + "\n" + "Protein " + (Math.round(gProtein)) + "\n" + "Carbs " + (Math.round(gCarbs)) + "\n" + "Fats " + (Math.round(gFats)));
        } else { //to calculate for female
            int weight = Integer.parseInt(cwTF.getText());
            int height = Integer.parseInt(heightTF.getText());
            int age = Integer.parseInt(ageTF.getText());
            double activity = Double.parseDouble(activityTF.getText());

            // adjust formula for women!!!!!!!!!!!
            double mKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) - 161;
            double mProtein = mKcal * 0.4 / 4;
            double mCarbs = mKcal * 0.3 / 3;
            double mFats = mKcal * 0.3 / 9;
            double cKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 - 300;
            double cProtein = cKcal * 0.5 / 4;
            double cCarbs = cKcal * 0.3 / 3;
            double cFats = cKcal * 0.2 / 9;
            double gKcal = (weight * 10) + (height * 6.25) + (age * 5) + (activity) + 5 + 300;
            double gProtein = gKcal * 0.3 / 4;
            double gCarbs = gKcal * 0.4 / 3;
            double gFats = gKcal * 0.3 / 9;
            mtnTA.append("Your maintainence Calories are " + mKcal + "\n" + "Protein " + mProtein + "\n" + "Carbs " + mCarbs + "\n" + "Fats " + mFats);
            cttTA.append("Your cutting calories are " + cKcal + "\n" + "Protein " + cProtein + "\n" + "Carbs " + cCarbs + "\n" + "Fats " + cFats);
            gngTA.append("Your gaining calories are " + gKcal + "\n" + "Protein " + gProtein + "\n" + "Carbs " + gCarbs + "\n" + "Fats " + gFats);
        }
    }
*/

    private void maintainRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maintainRbActionPerformed
        // Retrieve text from mtnTA
        //String maintainText = getMaintainText();
/*
        if (maintainRb.isSelected()) {
            calTa.append("Your maintainence Calories are " + mKcal + "\n" + "Protein " + mProtein + "\n" + "Carbs " + mCarbs + "\n" + "Fats " + mFats);
        } else if(cuttingRb.isSelected()){
            calTa.append("Your cutting Calories are " + cKcal + "\n" + "Protein " + cProtein + "\n" + "Carbs " + cCarbs + "\n" + "Fats " + cFats);
        }else{
            calTa.append("Your Gaining Calories are " + gKcal + "\n" + "Protein " + gProtein + "\n" + "Carbs " + gCarbs + "\n" + "Fats " + gFats);
        }
         */
    }//GEN-LAST:event_maintainRbActionPerformed


    private void cuttingRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuttingRbActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cuttingRbActionPerformed


    private void gainingRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainingRbActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_gainingRbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VVHGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VVHGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VVHGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VVHGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VVHGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CmtTF;
    private javax.swing.JTextField activityTF;
    private javax.swing.JLabel ageLBL;
    private javax.swing.JTextField ageTF;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextArea cttTA;
    private javax.swing.JRadioButton cuttingRb;
    private javax.swing.JLabel cwLBL;
    private javax.swing.JTextField cwTF;
    private javax.swing.JToggleButton edTBTN;
    private javax.swing.JRadioButton gainingRb;
    private javax.swing.JComboBox<String> genderCB;
    private javax.swing.JLabel genderLBL;
    private javax.swing.JTextArea gngTA;
    private javax.swing.JLabel goalsLBL;
    private javax.swing.JTextField goalsTF;
    private javax.swing.JLabel gwLBL;
    private javax.swing.JTextField gwTF;
    private javax.swing.JLabel heightLBL;
    private javax.swing.JTextField heightTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JRadioButton maintainRb;
    private javax.swing.JTextArea mtnTA;
    private javax.swing.JTextArea mtnTA1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton resultsBTN;
    private java.awt.TextArea textArea1;
    private javax.swing.JLabel tfLBL;
    private javax.swing.JTextField tfTF;
    // End of variables declaration//GEN-END:variables
public javax.swing.JComboBox<String> getGenderCB() {
        return genderCB;
    }
    public javax.swing.JTextField getAgeTF() {
        return ageTF;
    }
    public javax.swing.JTextField getCwTF(){
        return cwTF;
    }
public javax.swing.JTextField getHeightTF(){
        return heightTF;
    }
    public javax.swing.JTextField getActTF(){
        return activityTF;
    }
public javax.swing.JRadioButton getCutRb(){
        return cuttingRb;
    }
public javax.swing.JRadioButton getGainRb(){
        return gainingRb;
    }
public javax.swing.JRadioButton getMainRb(){
        return maintainRb;
    }
}
